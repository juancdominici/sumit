name: Build and Publish Android App

on:
  push:
    branches: [master]
  workflow_call:
    outputs:
      version:
        description: "The version of the built app"
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    name: Build App Bundle
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          VERSION_NAME=$(grep -E '^version:' pubspec.yaml | sed 's/version: *//g' | cut -d'+' -f1)
          VERSION_CODE=$(grep -E '^version:' pubspec.yaml | sed 's/version: *//g' | cut -d'+' -f2)
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Create keystore file
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/upload-keystore.jks

      - name: Create key.properties file
        run: |
          echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties

      - name: Flutter Build
        uses: AcmeSoftwareLLC/flutter-build@v1.0.2
        with:
          platform: android
          build-name: ${{ steps.get_version.outputs.version_name }}
          build-number: ${{ steps.get_version.outputs.version_code }}
          pub-get: true
          tree-shake-icons: false

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 1

  publish:
    name: Publish to Play Store
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Download App Bundle
        uses: actions/download-artifact@v4
        with:
          name: app-bundle
          path: build/app/outputs/bundle/release

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: ar.com.sumit
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: production
          status: draft
          versionCode: ${{ steps.get_version.outputs.version_code }}
          releaseName: ${{ steps.get_version.outputs.version_name }}
